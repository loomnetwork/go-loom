syntax = "proto3";

import "github.com/loomnetwork/go-loom/types/types.proto";

message TransferGatewayState {
    uint64 last_eth_block = 1;
}

message TransferGatewayWithdrawalReceipt {
    bytes hash = 1;
    // Signature generated by the Oracle that signed the hash
    bytes signature = 2;
}

message TransferGatewayAccount {
    Address owner = 1;
    uint64 withdrawal_nonce = 2;
    TransferGatewayWithdrawalReceipt withdrawal_receipt = 3;
}

enum TransferGatewayTokenKind {
    ETH = 0;
    ERC20 = 1;
    ERC721 = 2;
}

// Token Deposit (ETH/ERC20/ERC721) made into the Mainnet Gateway
message TransferGatewayTokenDeposited {
    // Mainnet address of token owner
    Address token_owner = 1;
    // Mainnet address of token contract, blank if ETH was deposited
    Address token_contract = 2;
    TransferGatewayTokenKind token_kind = 3;
    // ERC721 token ID, or amount of ERC20/ETH
    BigUInt value = 4;
}


// Withdrawal from Mainnet Transfer Gateway
message TransferGatewayTokenWithdrawn {
    // Mainnet address of token owner
    Address token_owner = 1;
    // Mainnet address of token contract, blank if ETH was withdrawn
    Address token_contract = 2;
    TransferGatewayTokenKind token_kind = 3;
    // ERC721 token ID, or amount of ERC20/ETH
    BigUInt value = 4;
}

message TransferGatewayMainnetEvent {
    uint64 eth_block = 1;
    oneof payload {
        TransferGatewayTokenDeposited deposit = 2;
        TransferGatewayTokenWithdrawn withdrawal = 3;
    }
}

// Genesis

message TransferGatewayInitRequest {
    // List of oracles that the Gateway should accept data from, each oracle is identified by the
    // address of the validator node it runs in
    repeated Address oracles = 1;
}

// Request & Response

// Batch of events from the Gateway on Ethereum mainnet
message TransferGatewayProcessEventBatchRequest {
    repeated TransferGatewayMainnetEvent events = 1;
}

message TransferGatewayStateRequest {
}

message TransferGatewayStateResponse {
    TransferGatewayState state = 1;
}

message TransferGatewayWithdrawERC721Request {
    // ID of ERC721 token
    BigUInt token_id = 1;
    // DAppChain address of ERC721 contract token belongs to
    Address token_contract = 2;
    // DAppChain address of the current owner of the token
    //Address token_owner = 3;
}

message TransferGatewayWithdrawalReceiptRequest {
    Address owner = 1;
}

message TransferGatewayWithdrawalReceiptResponse {
    TransferGatewayWithdrawalReceipt receipt = 1;
}
