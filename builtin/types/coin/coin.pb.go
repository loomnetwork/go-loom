// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/loomnetwork/go-loom/builtin/types/coin/coin.proto

/*
Package coin is a generated protocol buffer package.

It is generated from these files:
	github.com/loomnetwork/go-loom/builtin/types/coin/coin.proto

It has these top-level messages:
	BigUInt
	Economy
	Account
	InitRequest
	TotalSupplyRequest
	TotalSupplyResponse
	BalanceOfRequest
	BalanceOfResponse
	AllowanceRequest
	AllowanceResponse
	ApproveRequest
	ApproveResponse
	TransferRequest
	TransferResponse
	TransferFromRequest
	TransferFromResponse
*/
package coin

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import types "github.com/loomnetwork/go-loom/types"
import _ "github.com/gogo/protobuf/gogoproto"

import github_com_loomnetwork_go_loom_common "github.com/loomnetwork/go-loom/common"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type BigUInt struct {
	Value github_com_loomnetwork_go_loom_common.BigUint `protobuf:"bytes,1,opt,name=value,proto3,customtype=github.com/loomnetwork/go-loom/common.BigUint" json:"value"`
}

func (m *BigUInt) Reset()                    { *m = BigUInt{} }
func (m *BigUInt) String() string            { return proto.CompactTextString(m) }
func (*BigUInt) ProtoMessage()               {}
func (*BigUInt) Descriptor() ([]byte, []int) { return fileDescriptorCoin, []int{0} }

type Economy struct {
	TotalSupply *BigUInt `protobuf:"bytes,1,opt,name=total_supply,json=totalSupply" json:"total_supply,omitempty"`
}

func (m *Economy) Reset()                    { *m = Economy{} }
func (m *Economy) String() string            { return proto.CompactTextString(m) }
func (*Economy) ProtoMessage()               {}
func (*Economy) Descriptor() ([]byte, []int) { return fileDescriptorCoin, []int{1} }

func (m *Economy) GetTotalSupply() *BigUInt {
	if m != nil {
		return m.TotalSupply
	}
	return nil
}

type Account struct {
	Owner   *types.Address `protobuf:"bytes,1,opt,name=owner" json:"owner,omitempty"`
	Balance *BigUInt       `protobuf:"bytes,2,opt,name=balance" json:"balance,omitempty"`
}

func (m *Account) Reset()                    { *m = Account{} }
func (m *Account) String() string            { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()               {}
func (*Account) Descriptor() ([]byte, []int) { return fileDescriptorCoin, []int{2} }

func (m *Account) GetOwner() *types.Address {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *Account) GetBalance() *BigUInt {
	if m != nil {
		return m.Balance
	}
	return nil
}

type InitRequest struct {
	Accounts []*Account `protobuf:"bytes,1,rep,name=accounts" json:"accounts,omitempty"`
}

func (m *InitRequest) Reset()                    { *m = InitRequest{} }
func (m *InitRequest) String() string            { return proto.CompactTextString(m) }
func (*InitRequest) ProtoMessage()               {}
func (*InitRequest) Descriptor() ([]byte, []int) { return fileDescriptorCoin, []int{3} }

func (m *InitRequest) GetAccounts() []*Account {
	if m != nil {
		return m.Accounts
	}
	return nil
}

// read only
type TotalSupplyRequest struct {
}

func (m *TotalSupplyRequest) Reset()                    { *m = TotalSupplyRequest{} }
func (m *TotalSupplyRequest) String() string            { return proto.CompactTextString(m) }
func (*TotalSupplyRequest) ProtoMessage()               {}
func (*TotalSupplyRequest) Descriptor() ([]byte, []int) { return fileDescriptorCoin, []int{4} }

type TotalSupplyResponse struct {
	TotalSupply *BigUInt `protobuf:"bytes,1,opt,name=total_supply,json=totalSupply" json:"total_supply,omitempty"`
}

func (m *TotalSupplyResponse) Reset()                    { *m = TotalSupplyResponse{} }
func (m *TotalSupplyResponse) String() string            { return proto.CompactTextString(m) }
func (*TotalSupplyResponse) ProtoMessage()               {}
func (*TotalSupplyResponse) Descriptor() ([]byte, []int) { return fileDescriptorCoin, []int{5} }

func (m *TotalSupplyResponse) GetTotalSupply() *BigUInt {
	if m != nil {
		return m.TotalSupply
	}
	return nil
}

type BalanceOfRequest struct {
	Owner *types.Address `protobuf:"bytes,1,opt,name=owner" json:"owner,omitempty"`
}

func (m *BalanceOfRequest) Reset()                    { *m = BalanceOfRequest{} }
func (m *BalanceOfRequest) String() string            { return proto.CompactTextString(m) }
func (*BalanceOfRequest) ProtoMessage()               {}
func (*BalanceOfRequest) Descriptor() ([]byte, []int) { return fileDescriptorCoin, []int{6} }

func (m *BalanceOfRequest) GetOwner() *types.Address {
	if m != nil {
		return m.Owner
	}
	return nil
}

type BalanceOfResponse struct {
	Balance *BigUInt `protobuf:"bytes,1,opt,name=balance" json:"balance,omitempty"`
}

func (m *BalanceOfResponse) Reset()                    { *m = BalanceOfResponse{} }
func (m *BalanceOfResponse) String() string            { return proto.CompactTextString(m) }
func (*BalanceOfResponse) ProtoMessage()               {}
func (*BalanceOfResponse) Descriptor() ([]byte, []int) { return fileDescriptorCoin, []int{7} }

func (m *BalanceOfResponse) GetBalance() *BigUInt {
	if m != nil {
		return m.Balance
	}
	return nil
}

type AllowanceRequest struct {
	Owner   *types.Address `protobuf:"bytes,1,opt,name=owner" json:"owner,omitempty"`
	Spender *types.Address `protobuf:"bytes,2,opt,name=spender" json:"spender,omitempty"`
}

func (m *AllowanceRequest) Reset()                    { *m = AllowanceRequest{} }
func (m *AllowanceRequest) String() string            { return proto.CompactTextString(m) }
func (*AllowanceRequest) ProtoMessage()               {}
func (*AllowanceRequest) Descriptor() ([]byte, []int) { return fileDescriptorCoin, []int{8} }

func (m *AllowanceRequest) GetOwner() *types.Address {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *AllowanceRequest) GetSpender() *types.Address {
	if m != nil {
		return m.Spender
	}
	return nil
}

type AllowanceResponse struct {
	Remaining *BigUInt `protobuf:"bytes,1,opt,name=remaining" json:"remaining,omitempty"`
}

func (m *AllowanceResponse) Reset()                    { *m = AllowanceResponse{} }
func (m *AllowanceResponse) String() string            { return proto.CompactTextString(m) }
func (*AllowanceResponse) ProtoMessage()               {}
func (*AllowanceResponse) Descriptor() ([]byte, []int) { return fileDescriptorCoin, []int{9} }

func (m *AllowanceResponse) GetRemaining() *BigUInt {
	if m != nil {
		return m.Remaining
	}
	return nil
}

// volatile
type ApproveRequest struct {
	Spender *types.Address `protobuf:"bytes,1,opt,name=spender" json:"spender,omitempty"`
	Amount  *BigUInt       `protobuf:"bytes,2,opt,name=amount" json:"amount,omitempty"`
}

func (m *ApproveRequest) Reset()                    { *m = ApproveRequest{} }
func (m *ApproveRequest) String() string            { return proto.CompactTextString(m) }
func (*ApproveRequest) ProtoMessage()               {}
func (*ApproveRequest) Descriptor() ([]byte, []int) { return fileDescriptorCoin, []int{10} }

func (m *ApproveRequest) GetSpender() *types.Address {
	if m != nil {
		return m.Spender
	}
	return nil
}

func (m *ApproveRequest) GetAmount() *BigUInt {
	if m != nil {
		return m.Amount
	}
	return nil
}

type ApproveResponse struct {
}

func (m *ApproveResponse) Reset()                    { *m = ApproveResponse{} }
func (m *ApproveResponse) String() string            { return proto.CompactTextString(m) }
func (*ApproveResponse) ProtoMessage()               {}
func (*ApproveResponse) Descriptor() ([]byte, []int) { return fileDescriptorCoin, []int{11} }

type TransferRequest struct {
	To     *types.Address `protobuf:"bytes,1,opt,name=to" json:"to,omitempty"`
	Amount *BigUInt       `protobuf:"bytes,2,opt,name=amount" json:"amount,omitempty"`
}

func (m *TransferRequest) Reset()                    { *m = TransferRequest{} }
func (m *TransferRequest) String() string            { return proto.CompactTextString(m) }
func (*TransferRequest) ProtoMessage()               {}
func (*TransferRequest) Descriptor() ([]byte, []int) { return fileDescriptorCoin, []int{12} }

func (m *TransferRequest) GetTo() *types.Address {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *TransferRequest) GetAmount() *BigUInt {
	if m != nil {
		return m.Amount
	}
	return nil
}

type TransferResponse struct {
}

func (m *TransferResponse) Reset()                    { *m = TransferResponse{} }
func (m *TransferResponse) String() string            { return proto.CompactTextString(m) }
func (*TransferResponse) ProtoMessage()               {}
func (*TransferResponse) Descriptor() ([]byte, []int) { return fileDescriptorCoin, []int{13} }

type TransferFromRequest struct {
	From   *types.Address `protobuf:"bytes,1,opt,name=from" json:"from,omitempty"`
	To     *types.Address `protobuf:"bytes,2,opt,name=to" json:"to,omitempty"`
	Amount *BigUInt       `protobuf:"bytes,3,opt,name=amount" json:"amount,omitempty"`
}

func (m *TransferFromRequest) Reset()                    { *m = TransferFromRequest{} }
func (m *TransferFromRequest) String() string            { return proto.CompactTextString(m) }
func (*TransferFromRequest) ProtoMessage()               {}
func (*TransferFromRequest) Descriptor() ([]byte, []int) { return fileDescriptorCoin, []int{14} }

func (m *TransferFromRequest) GetFrom() *types.Address {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *TransferFromRequest) GetTo() *types.Address {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *TransferFromRequest) GetAmount() *BigUInt {
	if m != nil {
		return m.Amount
	}
	return nil
}

type TransferFromResponse struct {
}

func (m *TransferFromResponse) Reset()                    { *m = TransferFromResponse{} }
func (m *TransferFromResponse) String() string            { return proto.CompactTextString(m) }
func (*TransferFromResponse) ProtoMessage()               {}
func (*TransferFromResponse) Descriptor() ([]byte, []int) { return fileDescriptorCoin, []int{15} }

func init() {
	proto.RegisterType((*BigUInt)(nil), "BigUInt")
	proto.RegisterType((*Economy)(nil), "Economy")
	proto.RegisterType((*Account)(nil), "Account")
	proto.RegisterType((*InitRequest)(nil), "InitRequest")
	proto.RegisterType((*TotalSupplyRequest)(nil), "TotalSupplyRequest")
	proto.RegisterType((*TotalSupplyResponse)(nil), "TotalSupplyResponse")
	proto.RegisterType((*BalanceOfRequest)(nil), "BalanceOfRequest")
	proto.RegisterType((*BalanceOfResponse)(nil), "BalanceOfResponse")
	proto.RegisterType((*AllowanceRequest)(nil), "AllowanceRequest")
	proto.RegisterType((*AllowanceResponse)(nil), "AllowanceResponse")
	proto.RegisterType((*ApproveRequest)(nil), "ApproveRequest")
	proto.RegisterType((*ApproveResponse)(nil), "ApproveResponse")
	proto.RegisterType((*TransferRequest)(nil), "TransferRequest")
	proto.RegisterType((*TransferResponse)(nil), "TransferResponse")
	proto.RegisterType((*TransferFromRequest)(nil), "TransferFromRequest")
	proto.RegisterType((*TransferFromResponse)(nil), "TransferFromResponse")
}

func init() {
	proto.RegisterFile("github.com/loomnetwork/go-loom/builtin/types/coin/coin.proto", fileDescriptorCoin)
}

var fileDescriptorCoin = []byte{
<<<<<<< HEAD:builtin/plugins/coin/coin.pb.go
	// 479 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0xd1, 0x6a, 0x13, 0x41,
	0x14, 0x86, 0xdd, 0xd4, 0x36, 0xf5, 0xa4, 0xd8, 0x64, 0x5b, 0x24, 0x88, 0xd8, 0x30, 0x88, 0x08,
	0x92, 0xac, 0xb4, 0xa8, 0x17, 0x82, 0x90, 0x80, 0x42, 0x91, 0x22, 0xac, 0x35, 0xb7, 0xb2, 0xbb,
	0x99, 0xac, 0x83, 0x3b, 0x73, 0xc6, 0x99, 0xd9, 0x86, 0xbc, 0xa1, 0xcf, 0xe0, 0x45, 0x9f, 0x45,
	0x76, 0x66, 0x77, 0xb3, 0x35, 0xc4, 0xc4, 0x9b, 0x21, 0xe7, 0x3f, 0x73, 0xfe, 0xff, 0x3b, 0x19,
	0x16, 0xde, 0xa7, 0xcc, 0x7c, 0xcf, 0xe3, 0x51, 0x82, 0x3c, 0xc8, 0x10, 0xb9, 0xa0, 0x66, 0x81,
	0xea, 0x47, 0x90, 0xe2, 0xb0, 0x28, 0x83, 0x38, 0x67, 0x99, 0x61, 0x22, 0x90, 0x59, 0x9e, 0x32,
	0xa1, 0x83, 0x04, 0x99, 0xb0, 0xc7, 0x48, 0x2a, 0x34, 0xf8, 0xf8, 0xd5, 0x96, 0x79, 0xb3, 0x94,
	0x54, 0xbb, 0xb3, 0x9c, 0x18, 0x36, 0x26, 0x52, 0x4c, 0x31, 0xb0, 0x72, 0x9c, 0xcf, 0x6d, 0x65,
	0x0b, 0xfb, 0xcb, 0x5d, 0x27, 0x53, 0x68, 0x4f, 0x58, 0xfa, 0xf5, 0x52, 0x18, 0xff, 0x13, 0xec,
	0xdf, 0x44, 0x59, 0x4e, 0xfb, 0xde, 0xc0, 0x7b, 0x71, 0x34, 0x79, 0xfd, 0xeb, 0xf6, 0xec, 0xde,
	0xef, 0xdb, 0xb3, 0xe1, 0x16, 0x84, 0x04, 0x39, 0x47, 0x31, 0x2a, 0x5c, 0x98, 0x30, 0xa1, 0xf3,
	0x20, 0x6f, 0xa0, 0xfd, 0x21, 0x41, 0x81, 0x7c, 0xe9, 0xbf, 0x84, 0x23, 0x83, 0x26, 0xca, 0xbe,
	0xe9, 0x5c, 0xca, 0x6c, 0x69, 0xed, 0x3b, 0xe7, 0x87, 0xa3, 0x32, 0x37, 0xec, 0xd8, 0xee, 0x17,
	0xdb, 0x24, 0x57, 0xd0, 0x1e, 0x27, 0x09, 0xe6, 0xc2, 0xf8, 0x4f, 0x61, 0x1f, 0x17, 0x82, 0xaa,
	0x7a, 0x60, 0x3c, 0x9b, 0x29, 0xaa, 0x75, 0xe8, 0x64, 0x9f, 0x40, 0x3b, 0x8e, 0xb2, 0x48, 0x24,
	0xb4, 0xdf, 0xfa, 0xcb, 0xb2, 0x6a, 0x90, 0x0b, 0xe8, 0x5c, 0x0a, 0x66, 0x42, 0xfa, 0x33, 0xa7,
	0xda, 0xf8, 0xcf, 0xe0, 0x30, 0x72, 0xee, 0xba, 0xef, 0x0d, 0xf6, 0x9c, 0xab, 0x13, 0xc2, 0xba,
	0x43, 0x4e, 0xc1, 0xbf, 0x5e, 0x21, 0x95, 0xb3, 0x64, 0x02, 0x27, 0x77, 0x54, 0x2d, 0x51, 0x68,
	0xfa, 0x7f, 0xdb, 0x9d, 0x43, 0x77, 0xe2, 0xc8, 0x3e, 0xcf, 0x2b, 0xa6, 0x2d, 0x6b, 0x92, 0xb7,
	0xd0, 0x6b, 0xcc, 0x94, 0xa9, 0x8d, 0xdd, 0xbd, 0x4d, 0xbb, 0x4f, 0xa1, 0x3b, 0xce, 0x32, 0x5c,
	0x14, 0xc5, 0x8e, 0x61, 0x85, 0xaf, 0x96, 0x54, 0xcc, 0xa8, 0xaa, 0xff, 0xd3, 0xea, 0x46, 0xd5,
	0x20, 0xef, 0xa0, 0xd7, 0xf0, 0x2d, 0x81, 0x9e, 0xc3, 0x03, 0x45, 0x79, 0xc4, 0x04, 0x13, 0xe9,
	0x1a, 0xd2, 0xaa, 0x45, 0xa6, 0xf0, 0x70, 0x2c, 0xa5, 0xc2, 0x9b, 0x1a, 0xa9, 0x11, 0xe9, 0x6d,
	0x88, 0xf4, 0x07, 0x70, 0x10, 0xf1, 0xe2, 0x71, 0xd6, 0x5e, 0xba, 0xd4, 0x49, 0x0f, 0x8e, 0x6b,
	0x5f, 0x87, 0x44, 0xae, 0xe0, 0xf8, 0x5a, 0x45, 0x42, 0xcf, 0xa9, 0xaa, 0xb2, 0xfa, 0xd0, 0x32,
	0xb8, 0x16, 0xd3, 0x32, 0xb8, 0x43, 0x82, 0x0f, 0xdd, 0x95, 0x5d, 0x19, 0x81, 0x70, 0x52, 0x69,
	0x1f, 0x15, 0xf2, 0x2a, 0xe6, 0x09, 0xdc, 0x9f, 0x2b, 0xe4, 0x6b, 0x41, 0x56, 0x2d, 0x21, 0x5a,
	0xff, 0x84, 0xd8, 0xdb, 0x00, 0xf1, 0x08, 0x4e, 0xef, 0x06, 0x3a, 0x90, 0xf8, 0xc0, 0x7e, 0xcd,
	0x17, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xef, 0x21, 0xa6, 0x36, 0x70, 0x04, 0x00, 0x00,
=======
	// 430 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0xef, 0x6b, 0xd3, 0x40,
	0x18, 0x26, 0x9d, 0x5b, 0xe7, 0xdb, 0xe1, 0xda, 0x5b, 0x91, 0x22, 0xa2, 0xe5, 0x10, 0x11, 0xc4,
	0x46, 0x36, 0xd0, 0x0f, 0xfa, 0xa5, 0x05, 0x85, 0x7d, 0x18, 0x42, 0x9c, 0xfb, 0x2a, 0x97, 0xf4,
	0x1a, 0x0f, 0x2f, 0xf7, 0x9e, 0x77, 0x97, 0x95, 0xfe, 0xf7, 0x92, 0x5c, 0x92, 0x66, 0x86, 0xba,
	0xee, 0xcb, 0xc1, 0xfb, 0x3c, 0xf7, 0xfc, 0x78, 0x73, 0x04, 0x3e, 0xa7, 0xc2, 0xfd, 0xca, 0xe3,
	0x59, 0x82, 0x59, 0x28, 0x11, 0x33, 0xc5, 0xdd, 0x1a, 0xcd, 0xef, 0x30, 0xc5, 0x77, 0xc5, 0x18,
	0xc6, 0xb9, 0x90, 0x4e, 0xa8, 0xd0, 0x6d, 0x34, 0xb7, 0x61, 0x82, 0x42, 0x95, 0xc7, 0x4c, 0x1b,
	0x74, 0xf8, 0xec, 0xfd, 0x3d, 0x6a, 0xaf, 0x2a, 0x4f, 0xaf, 0xa0, 0x2f, 0xa1, 0xbf, 0x10, 0xe9,
	0x8f, 0x4b, 0xe5, 0xc8, 0x18, 0x0e, 0x6f, 0x99, 0xcc, 0xf9, 0x24, 0x98, 0x06, 0x6f, 0x4e, 0x22,
	0x3f, 0xd0, 0x0f, 0xd0, 0xff, 0x92, 0xa0, 0xc2, 0x6c, 0x43, 0xde, 0xc2, 0x89, 0x43, 0xc7, 0xe4,
	0x4f, 0x9b, 0x6b, 0x2d, 0x37, 0xe5, 0xbd, 0xc1, 0xf9, 0xf1, 0xac, 0x32, 0x88, 0x06, 0x25, 0xfb,
	0xbd, 0x24, 0xe9, 0x15, 0xf4, 0xe7, 0x49, 0x82, 0xb9, 0x72, 0xe4, 0x05, 0x1c, 0xe2, 0x5a, 0x71,
	0xd3, 0x08, 0xe6, 0xcb, 0xa5, 0xe1, 0xd6, 0x46, 0x1e, 0x26, 0x14, 0xfa, 0x31, 0x93, 0x4c, 0x25,
	0x7c, 0xd2, 0xfb, 0xc7, 0xb2, 0x26, 0xe8, 0x05, 0x0c, 0x2e, 0x95, 0x70, 0x11, 0xff, 0x93, 0x73,
	0xeb, 0xc8, 0x2b, 0x38, 0x66, 0xde, 0xdd, 0x4e, 0x82, 0xe9, 0x81, 0x77, 0xf5, 0x40, 0xd4, 0x30,
	0x74, 0x0c, 0xe4, 0x7a, 0x5b, 0xa9, 0xd2, 0xd2, 0x05, 0x9c, 0xdd, 0x41, 0xad, 0x46, 0x65, 0xf9,
	0xc3, 0xb6, 0x3b, 0x87, 0xe1, 0xc2, 0x37, 0xfb, 0xb6, 0xaa, 0x3b, 0xdd, 0xb3, 0x26, 0xfd, 0x08,
	0xa3, 0x96, 0xa6, 0x4a, 0x6d, 0xed, 0x1e, 0xec, 0xda, 0xfd, 0x06, 0x86, 0x73, 0x29, 0x71, 0x5d,
	0x0c, 0x7b, 0x86, 0x15, 0xbe, 0x56, 0x73, 0xb5, 0xe4, 0xa6, 0xf9, 0xa6, 0xf5, 0x8d, 0x9a, 0xa0,
	0x9f, 0x60, 0xd4, 0xf2, 0xad, 0x0a, 0xbd, 0x86, 0xc7, 0x86, 0x67, 0x4c, 0x28, 0xa1, 0xd2, 0x4e,
	0xa5, 0x2d, 0x45, 0x6f, 0xe0, 0xc9, 0x5c, 0x6b, 0x83, 0xb7, 0x4d, 0xa5, 0x56, 0x64, 0xb0, 0x23,
	0x92, 0x4c, 0xe1, 0x88, 0x65, 0xc5, 0xe3, 0x74, 0x5e, 0xba, 0xc2, 0xe9, 0x08, 0x4e, 0x1b, 0x5f,
	0x5f, 0x89, 0x5e, 0xc1, 0xe9, 0xb5, 0x61, 0xca, 0xae, 0xb8, 0xa9, 0xb3, 0x26, 0xd0, 0x73, 0xd8,
	0x89, 0xe9, 0x39, 0xdc, 0x23, 0x81, 0xc0, 0x70, 0x6b, 0x57, 0x45, 0x20, 0x9c, 0xd5, 0xd8, 0x57,
	0x83, 0x59, 0x1d, 0xf3, 0x1c, 0x1e, 0xad, 0x0c, 0x66, 0x9d, 0xa0, 0x12, 0xad, 0x4a, 0xf4, 0xfe,
	0x5b, 0xe2, 0x60, 0x47, 0x89, 0xa7, 0x30, 0xbe, 0x1b, 0xe8, 0x8b, 0xc4, 0x47, 0xe5, 0x6f, 0x79,
	0xf1, 0x37, 0x00, 0x00, 0xff, 0xff, 0xdb, 0xe0, 0x24, 0xe2, 0x08, 0x04, 0x00, 0x00,
>>>>>>> master:builtin/types/coin/coin.pb.go
}
