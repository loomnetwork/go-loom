syntax = "proto3";

import "github.com/loomnetwork/go-loom/types/types.proto";

package karma;

enum KarmaSourceTarget {
    CALL = 0;
    DEPLOY = 1;
}

message KarmaInitRequest {
    Address Oracle = 1;
    repeated KarmaSourceReward sources = 2;
    repeated KarmaAddressSource users = 3;
    KarmaUpkeepParams upkeep = 4;
    KarmaConfig config = 5;
}

message KarmaConfig {
    int64 min_karma_to_deploy =1;
}

message KarmaSources {
    repeated KarmaSourceReward sources = 1;
}

message KarmaNewOracle {
    Address new_oracle = 1;
}

message KarmaUserTarget {
    Address user = 1;
    KarmaSourceTarget target = 2;
}

message KarmaUserAmount {
    Address user = 1;
    BigUInt amount = 2;
}

message KarmaSourceReward {
    string name = 1;
    int64 reward = 2;
    KarmaSourceTarget target = 3;
}

message KarmaSource {
    string name = 1;
    BigUInt count = 2;
}

message KarmaUpkeepParams {
    int64 cost = 1;
    int64 period = 3;
}

message KarmaAddressSource {
    Address user = 1;
    repeated KarmaSource sources = 2;
}

message KarmaState {
    repeated KarmaSource source_states = 1;
    BigUInt deploy_karma_total = 2;
    BigUInt call_karma_total = 3;
    int64 num_owned_contracts = 4;
}

message KarmaStateKeyUser {
    repeated string state_keys = 1;
    Address user = 2;
}

message KarmaTotal{
    BigUInt count = 1;
}

message KarmaContractRecord{
    Address owner = 1;
    Address address = 2;
    uint64 contract_id = 3;
}

message GetConfigRequest {
}

message GetSourceRequest {
}

message AddKarmaRequest {
    Address user = 1;
    repeated KarmaSource karma_sources = 2;
}

message KarmaContractId {
    uint64 contract_id = 1;
}

message UpkeepState {
    bool upkeep_enabled = 1;
    uint64 last_upkeep_height = 2;
}


message GetUserStateRequest{
    Address user = 1;
}

message GetUserStateResponse{
    KarmaState karmastate = 1;
}

message SetAllowedKarmaSourcesRequest{
    KarmaSources Karmasources = 1;
}