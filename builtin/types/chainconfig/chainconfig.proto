syntax = "proto3";
package chainconfig;
import "github.com/loomnetwork/go-loom/types/types.proto";

message InitRequest {
    Address owner = 1;
    Params params = 2;
    repeated Feature features = 3; 
}

message GetFeatureRequest {
    string name = 1;
}

message AddFeatureRequest {
    repeated string names = 1;
    uint64 build_number = 2;
    bool auto_enable = 3;
}

message AddFeatureResponse {
}

message GetFeatureResponse {
    Feature feature = 1;
}

message Feature {
    string name = 1;
    enum FeatureStatus {
        PENDING = 0;
        WAITING = 1;
        ENABLED = 2;
        DISABLED = 3;
    }
    FeatureStatus status = 2;
    repeated Address validators = 3;

    //Percentage of feature enabled validators exceeds vote_threshold at this block_height
    uint64 block_height = 4;

    //Feature changes status from `pending` to `waiting` with at this percentage
    uint64 percentage = 5;

    //Minimum build number that supports this feature
    uint64 build_number = 6;

    //Pending feature is automatically enabled if it is supported in current build
    bool auto_enable = 7;
}

message Params {
    uint64 vote_threshold = 1;
    uint64 num_block_confirmations = 2;
}

message SetParamsRequest {
    Params params = 1;
}

message GetParamsRequest {
}

message GetParamsResponse {
    Params params = 1;
}

message ListFeaturesRequest {
}

message ListFeaturesResponse {
    repeated Feature features = 1;
}

message EnableFeatureRequest {
    repeated string names = 1;
}

message EnableFeatureResponse {
}

message RemoveFeatureRequest {
    repeated string names = 1;
}