syntax = "proto3";

import "github.com/loomnetwork/go-loom/types/types.proto";

// Bidirectional mapping between addresses (contracts or accounts) on two different blockchains.
// One of the address fields must contain a local address (same chain ID as the contract), while the
// other must contain a foreign address.
message AddressMapperMapping {
    // Address on a blockchain
    Address from = 1;
    // Corresponding address on another blockchain
    Address to = 2;
}

message ListAddressMapperMapping {
    repeated AddressMapperMapping mappings = 1;
}

message AddressMapperGetMultichainMappingRequest {
    Address from = 1;
    string chainId = 2;
}

message AddressMapperGetMultichainMappingResponse {
   repeated AddressMapperMapping mappings = 1;
}

message AddressMapperSetNonceRequest {
    Address address = 1;
}

message AddressMapperGetNonceRequest {
    Address address = 1;
}

message AddressMapperGetNonceResponse {
    Address address = 1;
    uint64 nonce = 2;
}

message AddressMapperNonce {
    Address address = 1;
    uint64 nonce = 2;
}


// Genesis

message AddressMapperInitRequest {

}

// Request & Response

message AddressMapperAddIdentityMappingRequest {
    // Address on a blockchain
    Address from = 1;
    // Corresponding address on another blockchain
    Address to = 2;
    // Signature of a hash of the two addresses signed with the key that corresponds to the foreign address
    bytes signature = 3;
}

message AddressMapperRemoveMappingRequest {
    // TODO
}

message AddressMapperGetMappingRequest {
    Address from = 1;
}

message AddressMapperGetMappingResponse {
    Address from = 1; // Address that was provided in the request
    Address to = 2;
}

message AddressMapperListMappingRequest {
}

message AddressMapperListMappingResponse {
    repeated AddressMapperMapping mappings = 1; // mapping address
}

message AddressMapperHasMappingRequest {
    Address from = 1;
}

message AddressMapperHasMappingResponse {
    bool has_mapping = 1;
}
