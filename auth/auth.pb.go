// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/loomnetwork/go-loom/auth/auth.proto

package auth

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type SignedTx struct {
	Inner                []byte   `protobuf:"bytes,1,opt,name=inner,proto3" json:"inner,omitempty"`
	Signature            []byte   `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	PublicKey            []byte   `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignedTx) Reset()         { *m = SignedTx{} }
func (m *SignedTx) String() string { return proto.CompactTextString(m) }
func (*SignedTx) ProtoMessage()    {}
func (*SignedTx) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_9032d2dcf64d0fc8, []int{0}
}
func (m *SignedTx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignedTx.Unmarshal(m, b)
}
func (m *SignedTx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignedTx.Marshal(b, m, deterministic)
}
func (dst *SignedTx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignedTx.Merge(dst, src)
}
func (m *SignedTx) XXX_Size() int {
	return xxx_messageInfo_SignedTx.Size(m)
}
func (m *SignedTx) XXX_DiscardUnknown() {
	xxx_messageInfo_SignedTx.DiscardUnknown(m)
}

var xxx_messageInfo_SignedTx proto.InternalMessageInfo

func (m *SignedTx) GetInner() []byte {
	if m != nil {
		return m.Inner
	}
	return nil
}

func (m *SignedTx) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *SignedTx) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

type NonceTx struct {
	Inner                []byte   `protobuf:"bytes,1,opt,name=inner,proto3" json:"inner,omitempty"`
	Sequence             uint64   `protobuf:"varint,2,opt,name=sequence,proto3" json:"sequence,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NonceTx) Reset()         { *m = NonceTx{} }
func (m *NonceTx) String() string { return proto.CompactTextString(m) }
func (*NonceTx) ProtoMessage()    {}
func (*NonceTx) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_9032d2dcf64d0fc8, []int{1}
}
func (m *NonceTx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NonceTx.Unmarshal(m, b)
}
func (m *NonceTx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NonceTx.Marshal(b, m, deterministic)
}
func (dst *NonceTx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NonceTx.Merge(dst, src)
}
func (m *NonceTx) XXX_Size() int {
	return xxx_messageInfo_NonceTx.Size(m)
}
func (m *NonceTx) XXX_DiscardUnknown() {
	xxx_messageInfo_NonceTx.DiscardUnknown(m)
}

var xxx_messageInfo_NonceTx proto.InternalMessageInfo

func (m *NonceTx) GetInner() []byte {
	if m != nil {
		return m.Inner
	}
	return nil
}

func (m *NonceTx) GetSequence() uint64 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func init() {
	proto.RegisterType((*SignedTx)(nil), "SignedTx")
	proto.RegisterType((*NonceTx)(nil), "NonceTx")
}

func init() {
	proto.RegisterFile("github.com/loomnetwork/go-loom/auth/auth.proto", fileDescriptor_auth_9032d2dcf64d0fc8)
}

var fileDescriptor_auth_9032d2dcf64d0fc8 = []byte{
	// 170 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x4b, 0xcf, 0x2c, 0xc9,
	0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0xcf, 0xc9, 0xcf, 0xcf, 0xcd, 0x4b, 0x2d, 0x29, 0xcf,
	0x2f, 0xca, 0xd6, 0x4f, 0xcf, 0xd7, 0x05, 0x71, 0xf5, 0x13, 0x4b, 0x4b, 0x32, 0xc0, 0x84, 0x5e,
	0x41, 0x51, 0x7e, 0x49, 0xbe, 0x52, 0x2c, 0x17, 0x47, 0x70, 0x66, 0x7a, 0x5e, 0x6a, 0x4a, 0x48,
	0x85, 0x90, 0x08, 0x17, 0x6b, 0x66, 0x5e, 0x5e, 0x6a, 0x91, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x4f,
	0x10, 0x84, 0x23, 0x24, 0xc3, 0xc5, 0x59, 0x9c, 0x99, 0x9e, 0x97, 0x58, 0x52, 0x5a, 0x94, 0x2a,
	0xc1, 0x04, 0x96, 0x41, 0x08, 0x08, 0xc9, 0x72, 0x71, 0x15, 0x94, 0x26, 0xe5, 0x64, 0x26, 0xc7,
	0x67, 0xa7, 0x56, 0x4a, 0x30, 0x43, 0xa4, 0x21, 0x22, 0xde, 0xa9, 0x95, 0x4a, 0xd6, 0x5c, 0xec,
	0x7e, 0xf9, 0x79, 0xc9, 0xa9, 0x38, 0x4d, 0x97, 0xe2, 0xe2, 0x28, 0x4e, 0x2d, 0x2c, 0x4d, 0xcd,
	0x4b, 0x86, 0x18, 0xce, 0x12, 0x04, 0xe7, 0x27, 0xb1, 0x81, 0x9d, 0x68, 0x0c, 0x08, 0x00, 0x00,
	0xff, 0xff, 0x94, 0x74, 0xb0, 0x16, 0xd4, 0x00, 0x00, 0x00,
}
